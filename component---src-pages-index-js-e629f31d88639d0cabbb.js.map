{"version":3,"sources":["webpack:///./src/pages/index.js"],"names":["BlogIndex","_ref","data","location","_useState","useState","activeCategory","setActiveCategory","_useState2","background","title","cardInfo","setCardInfo","siteTitle","site","siteMetadata","posts","allMarkdownRemark","edges","filter","_ref2","node","frontmatter","category","React","createElement","Layout","backgroundImage","updateActiveCategory","el","document","querySelector","classList","add","setTimeout","remove","finishCardInfo","SEO","description","ogImage","image","length","className","map","_ref3","fields","slug","key","onMouseOver","card","updateCardInfo","style","marginLeft","marginRight","width","rhythm","maxWidth","Link","to","subtitle","excerpt","date"],"mappings":"2FAAA,gFA4GeA,UArGG,SAAHC,GAA4B,IAAtBC,EAAID,EAAJC,KAAMC,EAAQF,EAARE,SAEzBC,EAA0CC,mBAAS,MAA9CC,EAAcF,EAAA,GAAEG,EAAiBH,EAAA,GACtCI,EAA8BH,mBAAS,CACrCI,WAAY,KACZC,MAAO,KAFJC,EAAQH,EAAA,GAAEI,EAAWJ,EAAA,GA+BpBK,EAAYX,EAAKY,KAAKC,aAAaL,MACrCM,EAAQd,EAAKe,kBAAkBC,MAAMC,QAAO,SAAAC,GAAa,IAAXC,EAAID,EAAJC,KAChD,OAAsB,OAAnBf,GAA8C,SAAnBA,GAEvBe,EAAKC,YAAYC,WAAajB,KAGvC,OACEkB,IAAAC,cAACC,IAAM,CACLvB,SAAUA,EACVO,MAAOG,EACPc,gBAAiBhB,EAAWA,EAASF,WAAa,KAClDH,eAAgBA,EAChBsB,qBAvByB,SAACL,GAC5B,IAAMM,EAAKC,SAASC,cAAc,qBAClCF,EAAGG,UAAUC,IAAI,UACjBC,YAAW,WACT3B,EAAkBgB,GAClBM,EAAGG,UAAUG,OAAO,YACnB,MAkBDC,eA7BmB,WACVN,SAASC,cAAc,oBAC/BC,UAAUG,OAAO,YA6BlBX,IAAAC,cAACY,IAAG,CACF3B,MAAOR,EAAKY,KAAKC,aAAaL,MAC9B4B,YAAapC,EAAKY,KAAKC,aAAauB,YACpCC,QAASrC,EAAKY,KAAKC,aAAayB,SAG/BxB,EAAMyB,QACPjB,IAAAC,cAAA,OAAKiB,UAAU,aAAY,eACblB,IAAAC,cAAA,WAAK,gBAGpBT,EAAM2B,KAAI,SAAAC,GAAe,IAAZvB,EAAIuB,EAAJvB,KACNX,EAAQW,EAAKC,YAAYZ,OAASW,EAAKwB,OAAOC,KACpD,OACEtB,IAAAC,cAAA,WACEsB,IAAK1B,EAAKwB,OAAOC,KACjBJ,UAAU,WACVM,YAAa,kBA3DA,SAACC,GACtB,GAAGA,EAAKxC,aAAeE,EAASF,YAAcwC,EAAKvC,QAAUC,EAASD,MAAtE,CAEA,GAAGuC,EAAKxC,aAAeE,EAASF,WACnBqB,SAASC,cAAc,oBAC/BC,UAAUC,IAAI,UAEnBC,YAAW,kBAAItB,EAAYqC,KAAO,MAoDTC,CAAe7B,EAAKC,eAErCE,IAAAC,cAAA,OAAKiB,UAAU,UAAUS,MAAO,CAC5BC,WAAW,OACXC,YAAY,OACZC,MAAOC,YAAO,IACdC,SAAU,SAEZhC,IAAAC,cAAA,cACED,IAAAC,cAAA,UAAID,IAAAC,cAACgC,OAAI,CAACC,GAAIrC,EAAKwB,OAAOC,MACvBpC,KAGLc,IAAAC,cAAA,WAASiB,UAAS,aAAc/B,EAASD,QAAUW,EAAKC,YAAYZ,MAAQ,eAAiB,KAC3Fc,IAAAC,cAACgC,OAAI,CAACC,GAAIrC,EAAKwB,OAAOC,MACnBzB,EAAKC,YAAYqC,UAAYtC,EAAKuC,WAIzCpC,IAAAC,cAAA,OAAKiB,UAAU,gBAAgBS,MAAO,CAClCC,WAAW,OACXC,YAAY,OACZG,SAAUD,YAAO,OAErB/B,IAAAC,cAAA,OAAKiB,UAAS,kBAAmB/B,EAASD,QAAUW,EAAKC,YAAYZ,MAAQ,gBAAkB,KAC5FW,EAAKC,YAAYuC","file":"component---src-pages-index-js-e629f31d88639d0cabbb.js","sourcesContent":["import React, { useState } from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport { rhythm } from \"../utils/typography\"\n\nconst BlogIndex = ({ data, location }) => {\n\n  let [activeCategory, setActiveCategory] = useState(null);\n  let [cardInfo, setCardInfo] = useState({\n    background: null,\n    title: '',\n  });\n\n  const updateCardInfo = (card) => {\n    if(card.background === cardInfo.background && card.title === cardInfo.title)\n      return;\n    if(card.background !== cardInfo.background) {\n      const el = document.querySelector('.backgroundImage');\n      el.classList.add('hidden');\n    }\n    setTimeout(()=>setCardInfo(card), 200);\n    //setTimeout(()=> el.classList.remove('hidden'), 500);\n  }\n\n  const finishCardInfo = () => {\n    const el = document.querySelector('.backgroundImage');\n    el.classList.remove('hidden');\n  }\n\n  const updateActiveCategory = (category) => {\n    const el = document.querySelector('#opacityContainer');\n    el.classList.add('hidden');\n    setTimeout(()=> {\n      setActiveCategory(category);\n      el.classList.remove('hidden');\n    }, 200\n    );\n  }\n  \n  const siteTitle = data.site.siteMetadata.title;\n  let posts = data.allMarkdownRemark.edges.filter(({node}) => {\n    if(activeCategory === null || activeCategory === 'home')\n      return true;\n    return node.frontmatter.category === activeCategory\n  });\n\n  return (\n    <Layout\n      location={location}\n      title={siteTitle}\n      backgroundImage={cardInfo ? cardInfo.background : null}\n      activeCategory={activeCategory}\n      updateActiveCategory={updateActiveCategory}\n      finishCardInfo={finishCardInfo}\n    >\n      <SEO\n        title={data.site.siteMetadata.title}\n        description={data.site.siteMetadata.description}\n        ogImage={data.site.siteMetadata.image}\n      />\n      {\n        !posts.length &&\n        <div className=\"noContent\">\n          Square zero.<br/>Nothing yet.\n        </div>\n      }\n      {posts.map(({ node }) => {\n        const title = node.frontmatter.title || node.fields.slug\n        return (\n          <article\n            key={node.fields.slug}\n            className=\"homeCard\"\n            onMouseOver={()=>updateCardInfo(node.frontmatter)}\n          >\n            <div className=\"content\" style={{\n                marginLeft: `auto`,\n                marginRight: `auto`,\n                width: rhythm(48),\n                maxWidth: '100%',\n              }}>\n              <header>\n                <h3><Link to={node.fields.slug}>\n                  {title}\n                </Link></h3>\n              </header>\n              <section className={`subtitle ${cardInfo.title === node.frontmatter.title ? 'showSubtitle' : ''}`}>\n                <Link to={node.fields.slug}>\n                  {node.frontmatter.subtitle || node.excerpt}\n                </Link>\n              </section>\n            </div>\n            <div className=\"cardSeparator\" style={{\n                marginLeft: `auto`,\n                marginRight: `auto`,\n                maxWidth: rhythm(48),\n              }}></div>\n            <div className={`date homeDate ${cardInfo.title === node.frontmatter.title ? 'highlightDate' : ''}`}>\n              {node.frontmatter.date}\n            </div>\n          </article>\n        )\n      })}\n    </Layout>\n  )\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n        description\n        image\n        social {\n          email\n        }\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          excerpt(pruneLength: 40)\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMDD, YYYY\")\n            title\n            subtitle\n            background\n            category\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}